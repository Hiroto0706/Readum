name: Deploy Frontend to Cloud Run (STG)

on:
  push:
    branches: [dev]
  workflow_dispatch:

jobs:
  deploy-stg:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22"
          cache: "npm"
          cache-dependency-path: frontend/package-lock.json

      - name: Install dependencies
        working-directory: frontend
        run: npm ci

      - name: Lint
        working-directory: frontend
        run: npm run lint

      - name: Build
        working-directory: frontend
        run: npm run build

      - name: Set up GCP authentication
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ vars.GCP_PROJECT_ID }}

      # JSON KEYを使用した認証
      - name: Authenticate to Google Cloud
        run: |
          echo '${{ secrets.GCP_SA_DEPLOY_KEY }}' > gcp-key.json
          gcloud auth activate-service-account --key-file=gcp-key.json
          gcloud config set project ${{ vars.GCP_PROJECT_ID }}
          gcloud auth configure-docker ${{ vars.GCP_REGION }}-docker.pkg.dev
          rm gcp-key.json

      - name: Build and push Docker image
        working-directory: frontend
        run: |
          docker build --platform linux/amd64 -t ${{ vars.GCP_REGION }}-docker.pkg.dev/${{ vars.GCP_PROJECT_ID }}/readum-repo/readum-frontend:${{ github.sha }} -t ${{ vars.GCP_REGION }}-docker.pkg.dev/${{ vars.GCP_PROJECT_ID }}/readum-repo/readum-frontend:latest .

          docker push ${{ vars.GCP_REGION }}-docker.pkg.dev/${{ vars.GCP_PROJECT_ID }}/readum-repo/readum-frontend:${{ github.sha }}
          docker push ${{ vars.GCP_REGION }}-docker.pkg.dev/${{ vars.GCP_PROJECT_ID }}/readum-repo/readum-frontend:latest

      - name: Deploy to Cloud Run
        env:
          tag_name : stg
        run: |
          gcloud run services update readum-frontend \
            --image ${{ vars.GCP_REGION }}-docker.pkg.dev/${{ vars.GCP_PROJECT_ID }}/readum-repo/readum-frontend:${{ github.sha }} \
            --region ${{ vars.GCP_REGION }} \
            --tag ${{ env.tag_name }} \
            --update-env-vars API_ENDPOINT=https://${{ env.tag_name }}---${{ vars.API_ENDPOINT }} \
            --no-traffic
